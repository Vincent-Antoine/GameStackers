<?php

namespace ContainerMV9yoxD;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUserControllerloginService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.HS5J6h6.App\Controller\UserController::login()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.HS5J6h6.App\\Controller\\UserController::login()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'passwordHasher' => ['privates', 'security.user_password_hasher', 'getSecurity_UserPasswordHasherService', true],
            'userRepository' => ['privates', 'App\\Repository\\UserRepository', 'getUserRepositoryService', true],
            'JWTManager' => ['privates', '.errored.rsX3FKr', NULL, 'Cannot determine controller argument for "App\\Controller\\UserController::login()": the $JWTManager argument is type-hinted with the non-existent class or interface: "App\\Controller\\JWTTokenManagerInterface". Did you forget to add a use statement?'],
        ], [
            'passwordHasher' => '?',
            'userRepository' => 'App\\Repository\\UserRepository',
            'JWTManager' => '?',
        ]))->withContext('App\\Controller\\UserController::login()', $container);
    }
}
